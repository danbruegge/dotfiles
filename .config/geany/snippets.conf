# Geany's snippets configuration file
#
# use \n or %newline% for a new line (it will be replaced by the used EOL char(s) - LF, CR/LF, CR).
# use \t or %ws% for an indentation step, it will be replaced according to the current document's indent mode.
# use \s to force whitespace at beginning or end of a value ('key= value' won't work, use 'key=\svalue').
# use %key% for all keys defined in the [Special] section.
# use %cursor% to define where the cursor should be placed after completion. You can define multiple
#     %cursor% wildcards and use the "Move cursor in snippet" to jump to the next defined cursor
#     position in the completed snippet.
# You can define a section for each supported filetype to overwrite default settings, the section
# name must match exactly the internal filetype name, run 'geany --ft-names' for a full list.
#
# Additionally, you can use most of the template wildcards like {developer}, {command:...},
# or {date} in the snippets.
# See the documentation for details.

# For a list of available filetype names, execute:
# geany --ft-names

# Default is used for all filetypes and keys can be overwritten by [filetype] sections
[Default]

# special keys to be used in other snippets, cannot be used "standalone"
# can be used by %key%, e.g. %brace_open%
# nesting of special keys is not supported (e.g. brace_open=\n{\n%brace_close% won't work)
# key "wordchars" is very special, it defines the word delimiting characters when looking for
# a word to auto complete, leave commented to use the default wordchars
[Special]
brace_open=\n{\n\t
brace_close=}\n
block=\n{\n\t%cursor%\n}
block_cursor=\n{\n\t%cursor%\n}\n%cursor%
js_block=\s{\n\t%cursor%\n}%cursor%
copyright=Â© {year}
author=@author {developer}
css_block={\n\t%cursor%\n}
#wordchars=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

# Optional keybindings to insert snippets
# Note: these can be overridden by Geany's configurable keybindings
[Keybindings]
#for=<Ctrl>7

[PHP]
php=<?php %cursor% ?>
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for ($i = 0; $i < %cursor%; $i++)%brace_open%\n%brace_close%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%

[Javascript]
if=if (%cursor%)%js_block%
else=else%js_block%
for=for (%cursor%var i = 0; i < %cursor%; i++)%js_block%
forin=for (prop in %cursor%)%js_block%
f=function %cursor%(%cursor%)%js_block%
while=while (%cursor%)%js_block%
do=do\s{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)\s{\n\tcase %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
case=case %cursor%:\n\t%cursor%\n\tbreak;
try=try%js_block%\scatch (%cursor%)%js_block%
#extra
exist=if (%cursor%.length > 0)%js_block%
int=parseInt(%cursor%, 10)
foril=for (var i = 0, il = %cursor%; i < il; i++)%js_block%
getid=getElementById(%cursor%)
gettag=getElementsByTagName(%cursor%)
p=prototype
w=window
d=document
t=this
o={\n\t%cursor%: %cursor%\n}
log=console.log(%cursor%);
strict='use strict';
on=.on('%cursor%', function ()%js_block%);
onclick=.on('click', function (e) {\n\te.preventDefault();\n\n\t%cursor%\n\n\treturn false;\n});
#Immediately-Invoked Function Expression (IIFE)
iife=(function (%cursor%)\s{\n\t%cursor%\n})(%cursor%);
#Class
class=var %cursor%MyClass = function (%cursor%)%js_block%;\n\n%cursor%MyClass.prototype = {};
#jQuery
ready=$(function ()%js_block%);
s=$('%cursor%')
#requireJS
define=define(function (require)%js_block%);
#doc
header=/*\n * %copyright%\n * %author%\n */
#jshint
hint=/* global %cursor% */

[Python]
bang=#!/usr/bin/env python
unicode=# -*- coding: utf-8 -*-
for=for i in xrange(%cursor%):\n\t
if=if %cursor%:\n\t
elif=elif %cursor%:\n\t
else=else:\n\t
while=while %cursor%:\n\t
try=try:\n\t%cursor%\nexcept Exception, ex:\n\t
with=with %cursor%:\n\t
def=def %cursor% (%cursor%):\n\t""" Function doc """\n\t
class=class %cursor%:\n\t""" Class doc """\n\t\n\tdef __init__ (self):\n\t\t""" Class initialiser """\n\t\tpass
# django related
model=class %cursor%(models.Model):\n\t

[HTML]
table=<table>\n\t<tr>\n\t\t<td>%cursor%</td>\n\t</tr>\n</table>
e=</%cursor%>
end=<!-- /%cursor% -->
php=<?php %cursor% ?>
# for jinja/django template
print={{ %cursor% }}
perf={% %cursor% %}
if={% if %cursor% %}\n\t\n{% endif %}
else={% else %}\n\t %cursor%
elif={% elif %cursor% %}\n\t
for={% for %cursor% in  %}\n\t\n{% endfor %}
block={% block %cursor% %}\n\t\n{% endblock %}
emptyblock={% %cursor% %}\n\t\n{% end %}
extends={% extends '%cursor%' %}
include={% include '%cursor%' %}
# django only
forempty={% for %cursor% in  %}\n\t\n{% empty %}\n\t\n{% endfor %}
with={% with %cursor% as  %}\n\t\n{% endwith %}
load={% load %cursor% %}
compress={% compress %cursor% %}\n\t\n{% endcompress %}
static={{ STATIC_URL }}
# django uhura only
slot={% slot '%cursor%' %}
# jinja only
forelse={% for %cursor% in  %}\n\t\n{% else %}\n\t\n{% endfor %}
#underscore template
_print=<%= %cursor% %>
_escape=<%- %cursor% %>
_perf=<% %cursor% %>
_if=<% if (%cursor%) { %>\n\t\n<% } %>
_each=<% _.each(%cursor%, function () { %>\n\t\n<% }); %>

[CSS]
b={\n\t%cursor%\n}
start=/* --- %cursor% { */
end=/* --- } %cursor% */
# lesscss
import=@import '%cursor%';
