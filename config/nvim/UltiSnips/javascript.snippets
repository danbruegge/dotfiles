# strict
# jshint global variables
snippet global
/* global ${1} */
endsnippet

# iife
snippet iife
(function (${1}) {
    ${3}
})(${2});
endsnippet

# function
snippet f
function ${1}(${2}) {
    ${3}
}
endsnippet

# if
snippet if
if (${1}) {
    ${2}
}
endsnippet

# else
snippet else
else {
    ${1}
}
endsnippet

# for
snippet for
for (var ${1:i} = 0; $1 < ${2}; $1${3}) {
    ${4}
}
endsnippet

# switch
snippet switch
switch (${1}) {
    case ${2}:
	    ${3}
	    break;
}
endsnippet

# swtich - default
snippet default
default:
    ${1}
    break;
endsnippet

# switch - case
snippet case
case ${1}:
    ${2}
    break;
endsnippet

# empty block
snippet b
{
    ${1}
}
endsnippet

# object
snippet o
{
    ${1}: ${2}
}
endsnippet

# integer
snippet int
parseInt(${1}, 10)
endsnippet

# console log
snippet cl
console.log(${1});
endsnippet

# console log
snippet cls
console.log('${1}');
endsnippet

# console info
snippet ci
console.info(${1});
endsnippet

# console error
snippet ce
console.error(${1});
endsnippet

# console trace
snippet ct
console.trace();
endsnippet

# ES6 ==========================================================================
snippet import "import ... from ..."
import $1 from '$2';
endsnippet

snippet export "export default"
export default
endsnippet

snippet class "class $1 { constructor ($2) { $3 } }"
class $1 {
    constructor ($2) {
	    $3
    }
}
endsnippet

# testing ======================================================================
snippet describe
describe('$1', () => {
    $2
});
endsnippet

snippet test
test('$1', () => {
    $2
});
endsnippet

snippet it
it('$1', () => {
    $2
});
endsnippet

snippet beforeEach
beforeEach(() => {
    $1
});
endsnippet

# react ========================================================================
snippet component
class $1 extends Component {
    render () {
	return $2;
    }
}
endsnippet
