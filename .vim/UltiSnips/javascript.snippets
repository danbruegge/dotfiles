# strict
snippet strict
'use strict';
endsnippet

# jshint basic
snippet hint
/* global ${1} */
endsnippet

# iife
snippet iife
(function (${1}) {
    ${3}
})(${2});
endsnippet

# function
snippet f
function ${1}(${2}) {
    ${3}
}
endsnippet

# function;
snippet f;
function ${1}(${2}) {
    ${3}
};
endsnippet

# function,
snippet f,
function ${1}(${2}) {
    ${3}
},
endsnippet

# function, with strict and self
snippet ff
function ${1}(${2}) {

    'use strict';

    var self = this;

    ${3}
}
endsnippet

# if
snippet if
if (${1}) {
    ${2}
}
endsnippet

# else
snippet else
else {
    ${1}
}
endsnippet

# for
snippet for
for (var ${1:i} = 0; $1 < ${2}; $1${3}) {
    ${4}
}
endsnippet

# switch
snippet switch
switch (${1}) {
    case ${2}:
	    ${3}
	    break;
}
endsnippet

# swtich - default
snippet default
default:
    ${1}
    break;
endsnippet

# switch - case
snippet case
case ${1}:
    ${2}
    break;
endsnippet

# object
snippet o
{
    ${1}: ${2}
}
endsnippet

# integer
snippet int
parseInt(${1}, 10)
endsnippet

# console log 
snippet cl
console.log(${1});
endsnippet

# console info
snippet ci
console.info(${1});
endsnippet

# console error
snippet ce
console.error(${1});
endsnippet

# console trace
snippet ct
console.trace();
endsnippet

# helper - declare self
snippet self
var self = this;
endsnippet

# helper - check if object exist
snippet exist
if (${1}.length > 0) {
    ${2}
}
endsnippet

# helper - check if object is defined
snippet defined
if (typeof ${1} !== 'undefined') {
    ${2}
}
endsnippet

# ES6 ==========================================================================
snippet import "import ... from ..."
import { $1 } from './$2';
endsnippet

snippet export
export { $1 };
endsnippet

snippet class
class $1 {
    constructor ($2) {
	    $3
    }
}
endsnippet
